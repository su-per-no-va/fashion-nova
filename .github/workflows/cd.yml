on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  DOCKER_IMAGE_TAG_NAME: fashion-nova

jobs:
  build-and-docker-push:
    
    # 실행환경
    runs-on: ubuntu-latest

    # 실행 스텝 지정
    steps:
    - uses: actions/checkout@v4
    
    # java version 지정
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Build
    - name: Build with Gradle
      run: ./gradlew clean build

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest

  # 위의 build-and-docker-push 이 끝나고 실행
  # deploy-to-ec2:
  #   needs: build-and-docker-push
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Deploy to EC2
  #       uses: appleboy/ssh-action@v1.0.3
  #       with:
  #         host: ${{ secrets.EC2_HOST }}
  #         username: ${{ secrets.EC2_USER }}
  #         key: ${{ secrets.EC2_KEY }}
  #         script: |
  #           CONTAINER_ID=$(sudo docker ps -q --filter "publish=8080-8080")
            
  #           if [ ! -z "$CONTAINER_ID" ]; then
  #             sudo docker stop $CONTAINER_ID
  #             sudo docker rm $CONTAINER_ID
  #           fi
  #           sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest
  #           sudo docker run -d -p 8080:8080 \
  #               -e DB_USER=${{secrets.DB_USER}} \
  #               -e DB_PASSWORD=${{secrets.DB_PASSWORD}} \
  #               -e DB_URL=${{secrets.DB_URL}} \
  #               -e JWT_SECRET_KEY=${{secrets.JWT_SECRET_KEY}} \
  #               -e ACCESS_KEY=${{secrets.ACCESS_KEY}} \
  #               -e SECRET_KEY=${{secrets.SECRET_KEY}} \
  #           ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_TAG_NAME }}:latest
